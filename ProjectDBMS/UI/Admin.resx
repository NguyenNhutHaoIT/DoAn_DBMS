<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAMRMCADETAgAxEwIFMRMCBTETAgAxEwIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADETAgAxEwIBsRMCE3ETAjFxEwIxcRMCE3ETAgGxEwIAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADETAgAxEwIAMRMCCbETAiYxEwI8sRMCP/ETAj+xEwI8sRMCJnETAgmxE0IAMRM
        CAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADDTAgAxEwIAMRMCA3ETAhmxEwI2cRMCP/ETAjmxEwIgMRMCIDETAjmxEwI/8RM
        CNrETAhnxEwIDsRMCADDTAkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAxEwIAMRMCALETAg6xEwIssRMCPrETAj5xEwIrsRMCDbETAgCxEwIAsRM
        CDbETAiuxEwI+cRMCPrETAiyxEwIOsRMCALETAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAxEwIAMRMCADETAgZxEwIgsRMCOnETAj/xEwI1sRMCGLETAgMxEwIAMNM
        BgDFTQgAxEwIAMRMCAzETAhixEwI1sRMCP/ETAjpxEwIgsRMCBnETAgAxEwIAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAMRMCADETAgDxEwIT8RMCMnETAj+xEwI8cRMCJTETAgjxEsIAMRM
        CAAAAAAAAAAAAAAAAAAAAAAAxEwIAMRMCADETAgjxEwIlMRMCPDETAj+xEwIycRMCFDETAgDxEwIAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAxEwIAMRMCBzETAjaxEwI/8RMCMPETAhJxEwIBcRM
        CAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMRMCADETAgFxEwIScRMCMLETAj/xEwI2sRM
        CBzETAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADETAgAxEwIH8RMCOLETAjnxEwILMRM
        CADETAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMRMCADETAgAxEwILMRM
        COfETAjixEwIH8RMCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMRMCADETAgfxEwI4sRM
        COLETAgfxEwIAAAAAAAAAAAAAAAAAMNLCADETAgAxEwICsRMCArETAgAw0wIAAAAAAAAAAAAAAAAAMRM
        CADETAgfxEwI4sRMCOLETAgfxEwIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAxEwIAMRM
        CB/ETAjixEwI4sRMCB/ETAgAAAAAAAAAAADETAgAxEwIAsRMCDbETAisxEwIrMRMCDfETAgCxEwIAAAA
        AAAAAAAAxEwIAMRMCB/ETAjixEwI4sRMCB/ETAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADETAgAxEwIH8RMCOLETAjixEwIH8RMCADETAgAxEwIAMRMCBfETAh+xEwI5sNLCP/DSwj/xEwI5sRM
        CH7ETAgXxEwIAMRMCADETAgAxEwIH8RMCOLETAjhxEwIMMRMCHzETAh+xEwIEcRMCAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAMRMCADETAgfxEwI4sRMCOLETAgfxEwIAMRMCAbETAhOxEwIxsNLCP3HUQr/2m8X/9pv
        F//HUQr/w0sH/cRMCMbETAhPxEwIBsRMCADETAgfxEwI4sRMCODETAg9xEwI4MRMCOLETAgfxEwIAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAxEwIAMRMCB/ETAjixEwI4sRMCB/ETAgmxEwImsRLCPLETAj/0WER/+uL
        I//7pS7/+6Uu/+uLI//RYRH/xEwI/8RLCPLETAibxEwIJsRMCB/ETAjixEwI4MRMCD3ETAjgxEwI4sRM
        CB/ETAgAAAAAAAAAAAAAAAAAAAAAAAAAAADETAgAxEwIH8RMCOLETAjoxEwIhMRMCNnDSwf/ylUM/+F6
        HP/3niv//acv//ymLv/8pi7//acv//efK//hehz/ylUM/8NLB//ETAjZxEwIhcRMCOjETAjgxEwIPcRM
        CODETAjixEwIH8RMCAAAAAAAAAAAAAAAAAAAAAAAAAAAAMRMCADETAggxEwI4cRMCP/DSwj8xU4J/9Zp
        FP/wkyb//KYu//ynLv/8pi7//KYu//ymLv/8pi7//Kcu//ymLv/xlCb/1moV/8VOCf/DSwj8xEwI/8RM
        CN/ETAg/xEwI4MRMCOLETAgfxEwIAAAAAAAAAAAAAAAAAMRMCADETAgAxEwIG8RMCIzETAj3w0sI/81b
        Dv/nhCD/+qMt//2nLv/8pi7//KYu//ymLv/8pi7//KYu//ymLv/8pi7//KYu//2nLv/6oy3/54Ug/81b
        Dv/DSwj/xEwI9sRMCKTETAjrxEwI4sRMCB/ETAgAAAAAAMRMCADETAgAxEwICsRMCFbETAjNxEwI/shS
        C//ccxn/9Zop//2nL//8pi7//KYu//ymLv/8pi7//KYu//ymLv/8pi7//KYu//ymLv/8pi7//KYu//ym
        Lv/9py//9Zsp/9xzGf/IUgv/xEwI/8RMCP/ETAjjxEwIJcRMCADETAgAxEwIAMRLCADETAhoxEwI8cRM
        CP/GTwn/430d//ymLv/9py7//KYu//ymLv/8pi7//KYu//ymLv/8pi7//KYu//ymLv/8pi7//KYu//ym
        Lv/8pi7//KYu//ymLv/9py7//KYu/+N+Hf/GTwn/xEwI/8RMCPbETAhsxEwIAMRMCADETAgAxEwIAMRM
        CBXETAh0xEwI4MRMCP/LWA3/430d//igK//9py///KYu//ymLv/8pi7//KYu//ymLv/8pi7//KYu//ym
        Lv/8pi7//KYu//ymLv/8pi7//acv//igK//jfh3/y1gN/8RMCP/ETAjgxEwIdMRMCBXETAgAxEwIAAAA
        AAAAAAAAxEwIAMRMCAHETAguxEwIo8RLCPXETQj/0mMS/+2OJP/8pS7//Kcu//ymLv/8pi7//KYu//ym
        Lv/8pi7//KYu//ymLv/8pi7//Kcu//ylLv/tjiT/02MS/8RNCP/ESwj1xEwIo8RMCC7ETAgBxEwIAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAxk4IAMRMCADETAgJxEwIV8RMCM3DSwf+x1IK/9xzGf/1min//acv//ym
        Lv/8pi7//KYu//ymLv/8pi7//KYu//2nL//1min/3HMZ/8dSCv/DSwf+xEwIzcRMCFfETAgJxEwIAMJM
        CgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMRMCADETAgAxEwIHMRMCIfETAjqw0sI/81b
        Dv/nhCD/+qIt//2nLv/8pi7//KYu//2nLv/6oy3/54Qg/81bDv/DSwj/xEwI6sRMCIfETAgcxEwIAMRM
        CAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADETAgAxEwIA8RM
        CD3ETAi1w0sI+sVOCf/WaRT/8JMm//ymLv/8pi7/8JMm/9ZpFP/FTgn/w0sI+sRMCLXETAg9xEwIA8RM
        CAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADFTQgAxEwIAMRMCA7ETAhpxEwI2sNLB//JVQz/4Hkb/+B5G//KVQz/w0sH/8RMCNrETAhpxEwID8RM
        CADDTAcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAxEwIAMRMCADETAgnxEwImsRLCPLETAj/xEwI/8RLCPLETAiaxEwIJ8NN
        BwDETAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMRMCADETAgGxEwITcRMCMXETAjFxEwITsRM
        CAbETAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMRMBwDETAgAxEwIFMRM
        CBTETAgAxEwIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/////////////n////gf///wD///wAP//wAA//4DwH/4D/Af+B/4H/h/
        /h/4fn4f+HgeH/hwDgP4QAID+AAAA/gAAAP4AAAD8AAAA8AAAAPAAAADwAAAA+AAAAf4AAAf/gAAf/8A
        AP//wAP///AP///4H////n////////////8=
</value>
  </data>
</root>